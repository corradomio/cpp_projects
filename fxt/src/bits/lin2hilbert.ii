# 1 "src/bits/lin2hilbert.cc"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "src/bits/lin2hilbert.cc"





# 1 "src/fxttypes.h" 1
# 12 "src/fxttypes.h"
typedef unsigned char uchar;
typedef unsigned short ushort;
typedef unsigned int uint;
typedef unsigned long ulong;
# 7 "src/bits/lin2hilbert.cc" 2
# 1 "src/bits/bitsperlong.h" 1
# 11 "src/bits/bitsperlong.h"
# 1 "D:/MinGW/msys64/mingw64/include/c++/9.3.0/climits" 1 3
# 39 "D:/MinGW/msys64/mingw64/include/c++/9.3.0/climits" 3
       
# 40 "D:/MinGW/msys64/mingw64/include/c++/9.3.0/climits" 3

# 1 "D:/MinGW/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++config.h" 1 3
# 252 "D:/MinGW/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++config.h" 3

# 252 "D:/MinGW/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++config.h" 3
namespace std
{
  typedef long long unsigned int size_t;
  typedef long long int ptrdiff_t;


  typedef decltype(nullptr) nullptr_t;

}
# 274 "D:/MinGW/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++config.h" 3
namespace std
{
  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }
}
namespace __gnu_cxx
{
  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }
}
# 524 "D:/MinGW/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++config.h" 3
# 1 "D:/MinGW/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/os_defines.h" 1 3
# 525 "D:/MinGW/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++config.h" 2 3


# 1 "D:/MinGW/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/cpu_defines.h" 1 3
# 528 "D:/MinGW/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++config.h" 2 3
# 42 "D:/MinGW/msys64/mingw64/include/c++/9.3.0/climits" 2 3
# 1 "D:/MinGW/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/9.3.0/include-fixed/limits.h" 1 3 4
# 34 "D:/MinGW/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/9.3.0/include-fixed/limits.h" 3 4
# 1 "D:/MinGW/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/9.3.0/include-fixed/syslimits.h" 1 3 4






# 1 "D:/MinGW/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/9.3.0/include-fixed/limits.h" 1 3 4
# 194 "D:/MinGW/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/9.3.0/include-fixed/limits.h" 3 4
# 1 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/limits.h" 1 3 4





# 1 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/crtdefs.h" 1 3 4
# 10 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/crtdefs.h" 3 4
# 1 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/corecrt.h" 1 3 4
# 10 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/corecrt.h" 3 4
# 1 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/_mingw.h" 1 3 4
# 10 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/_mingw.h" 3 4
# 1 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/_mingw_mac.h" 1 3 4
# 98 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/_mingw_mac.h" 3 4
             
# 107 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/_mingw_mac.h" 3 4
             
# 11 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/_mingw.h" 2 3 4
# 1 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/_mingw_secapi.h" 1 3 4
# 44 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/_mingw_secapi.h" 3 4
extern "C++" {
template <bool __test, typename __dsttype>
  struct __if_array;
template <typename __dsttype>
  struct __if_array <true, __dsttype> {
    typedef __dsttype __type;
};
}
# 12 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/_mingw.h" 2 3 4
# 284 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/_mingw.h" 3 4
# 1 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/vadefs.h" 1 3 4
# 9 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/vadefs.h" 3 4
# 1 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/_mingw.h" 1 3 4
# 609 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/_mingw.h" 3 4
# 1 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/sdks/_mingw_ddk.h" 1 3 4
# 610 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/_mingw.h" 2 3 4
# 10 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/vadefs.h" 2 3 4




#pragma pack(push,_CRT_PACKING)



extern "C" {





  typedef __builtin_va_list __gnuc_va_list;






  typedef __gnuc_va_list va_list;
# 99 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/vadefs.h" 3 4
}



#pragma pack(pop)
# 285 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/_mingw.h" 2 3 4
# 569 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/_mingw.h" 3 4
extern "C" {
# 580 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/_mingw.h" 3 4
void __attribute__((__cdecl__)) __debugbreak(void);
extern __inline__ __attribute__((__always_inline__,__gnu_inline__)) void __attribute__((__cdecl__)) __debugbreak(void)
{
  __asm__ __volatile__("int {$}3":);
}




const char *__mingw_get_crt_info (void);


}
# 11 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/corecrt.h" 2 3 4




#pragma pack(push,_CRT_PACKING)
# 40 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/corecrt.h" 3 4
__extension__ typedef unsigned long long size_t;
# 50 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/corecrt.h" 3 4
__extension__ typedef long long ssize_t;






typedef size_t rsize_t;
# 67 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/corecrt.h" 3 4
__extension__ typedef long long intptr_t;
# 80 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/corecrt.h" 3 4
__extension__ typedef unsigned long long uintptr_t;
# 93 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/corecrt.h" 3 4
__extension__ typedef long long ptrdiff_t;
# 111 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/corecrt.h" 3 4
typedef unsigned short wint_t;
typedef unsigned short wctype_t;





typedef int errno_t;




typedef long __time32_t;




__extension__ typedef long long __time64_t;
# 143 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/corecrt.h" 3 4
typedef __time64_t time_t;
# 435 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/corecrt.h" 3 4
struct threadlocaleinfostruct;
struct threadmbcinfostruct;
typedef struct threadlocaleinfostruct *pthreadlocinfo;
typedef struct threadmbcinfostruct *pthreadmbcinfo;
struct __lc_time_data;

typedef struct localeinfo_struct {
  pthreadlocinfo locinfo;
  pthreadmbcinfo mbcinfo;
} _locale_tstruct,*_locale_t;



typedef struct tagLC_ID {
  unsigned short wLanguage;
  unsigned short wCountry;
  unsigned short wCodePage;
} LC_ID,*LPLC_ID;




typedef struct threadlocaleinfostruct {





  int refcount;
  unsigned int lc_codepage;
  unsigned int lc_collate_cp;
  unsigned long lc_handle[6];
  LC_ID lc_id[6];
  struct {
    char *locale;
    wchar_t *wlocale;
    int *refcount;
    int *wrefcount;
  } lc_category[6];
  int lc_clike;
  int mb_cur_max;
  int *lconv_intl_refcount;
  int *lconv_num_refcount;
  int *lconv_mon_refcount;
  struct lconv *lconv;
  int *ctype1_refcount;
  unsigned short *ctype1;
  const unsigned short *pctype;
  const unsigned char *pclmap;
  const unsigned char *pcumap;
  struct __lc_time_data *lc_time_curr;

} threadlocinfo;







#pragma pack(pop)
# 11 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/crtdefs.h" 2 3 4
# 7 "D:/MinGW/msys64/mingw64/x86_64-w64-mingw32/include/limits.h" 2 3 4
# 195 "D:/MinGW/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/9.3.0/include-fixed/limits.h" 2 3 4
# 8 "D:/MinGW/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/9.3.0/include-fixed/syslimits.h" 2 3 4
# 35 "D:/MinGW/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/9.3.0/include-fixed/limits.h" 2 3 4
# 43 "D:/MinGW/msys64/mingw64/include/c++/9.3.0/climits" 2 3
# 12 "src/bits/bitsperlong.h" 2
# 8 "src/bits/lin2hilbert.cc" 2
# 1 "src/bits/bitzip.h" 1







# 1 "src/bits/bitbutterfly.h" 1
# 45 "src/bits/bitbutterfly.h"

# 45 "src/bits/bitbutterfly.h"
static inline ulong butterfly_8(ulong x)

{





    const ulong ml = 0x00ff0000UL;

    const ulong s = 8;
    const ulong mr = ml >> s;
    const ulong t = ((x & ml) >> s ) | ((x & mr) << s );
    x = (x & ~(ml | mr)) | t;
    return x;
# 75 "src/bits/bitbutterfly.h"
}



static inline ulong butterfly_4(ulong x)

{





    const ulong ml = 0x0f000f00UL;

    const ulong s = 4;
    const ulong mr = ml >> s;
    const ulong t = ((x & ml) >> s ) | ((x & mr) << s );
    x = (x & ~(ml | mr)) | t;
    return x;
# 108 "src/bits/bitbutterfly.h"
}



static inline ulong butterfly_2(ulong x)

{





    const ulong ml = 0x30303030UL;

    const ulong s = 2;
    const ulong mr = ml >> s;
    const ulong t = ((x & ml) >> s ) | ((x & mr) << s );
    x = (x & ~(ml | mr)) | t;
    return x;
# 141 "src/bits/bitbutterfly.h"
}



static inline ulong butterfly_1(ulong x)

{





    const ulong ml = 0x44444444UL;

    const ulong s = 1;
    const ulong mr = ml >> s;
    const ulong t = ((x & ml) >> s ) | ((x & mr) << s );
    x = (x & ~(ml | mr)) | t;
    return x;
# 174 "src/bits/bitbutterfly.h"
}
# 9 "src/bits/bitzip.h" 2




static inline ulong bit_zip(ulong x)


{





    x = butterfly_8(x);
    x = butterfly_4(x);
    x = butterfly_2(x);
    x = butterfly_1(x);
# 59 "src/bits/bitzip.h"
    return x;
}



static inline ulong bit_unzip(ulong x)



{


    x = butterfly_1(x);
    x = butterfly_2(x);
    x = butterfly_4(x);
    x = butterfly_8(x);
# 107 "src/bits/bitzip.h"
    return x;
}


static inline ulong bit_zip0(ulong x)




{
# 126 "src/bits/bitzip.h"
    x = (x | (x<<8)) & 0x00ff00ffUL;
    x = (x | (x<<4)) & 0x0f0f0f0fUL;
    x = (x | (x<<2)) & 0x33333333UL;
    x = (x | (x<<1)) & 0x55555555UL;
# 150 "src/bits/bitzip.h"
    return x;
}


static inline ulong bit_unzip0(ulong x)




{
# 169 "src/bits/bitzip.h"
    x = (x | (x>>1)) & 0x33333333UL;
    x = (x | (x>>2)) & 0x0f0f0f0fUL;
    x = (x | (x>>4)) & 0x00ff00ffUL;
    x = (x | (x>>8)) & 0x0000ffffUL;
# 192 "src/bits/bitzip.h"
    return x;
}





static inline void bit_zip2(ulong x, ulong &lo, ulong &hi)


{


    x = bit_zip(x);




    lo = x & 0x55555555UL;
    hi = (x>>1) & 0x55555555UL;






}


static inline ulong bit_unzip2(ulong lo, ulong hi)

{

    return bit_unzip( (hi<<1) | lo );



}


static inline ulong bit_zip2(ulong x, ulong y)


{
    return bit_zip( (y<<(32/2)) + x );
}


static inline void bit_unzip2(ulong t, ulong &x, ulong &y)


{
    t = bit_unzip(t);
    y = t >> (32/2);





    x = t & 0x0000ffffUL;

}
# 9 "src/bits/lin2hilbert.cc" 2
# 1 "src/bits/graycode.h" 1
# 12 "src/bits/graycode.h"
static inline ulong gray_code(ulong x)


{
    return x ^ (x>>1);
}



static inline ulong inverse_gray_code(ulong x)




{
# 44 "src/bits/graycode.h"
    x ^= x>>1;
    x ^= x>>2;
    x ^= x>>4;
    x ^= x>>8;
    x ^= x>>16;







    return x;
}



static inline ulong byte_gray_code(ulong x)

{

    return x ^ ((x & 0xfefefefeUL)>>1);





}


static inline ulong byte_inverse_gray_code(ulong x)

{

    x ^= ((x & 0xfefefefeUL)>>1);
    x ^= ((x & 0xfcfcfcfcUL)>>2);
    x ^= ((x & 0xf0f0f0f0UL)>>4);
# 89 "src/bits/graycode.h"
    return x;
}
# 10 "src/bits/lin2hilbert.cc" 2




static const ulong htab[] = {


    ((0<<3)+(0<<2)+(1<<1)+(0)),
    ((0<<3)+(1<<2)+(0<<1)+(0)),
    ((1<<3)+(1<<2)+(0<<1)+(0)),
    ((1<<3)+(0<<2)+(0<<1)+(1)),
    ((1<<3)+(1<<2)+(1<<1)+(1)),
    ((0<<3)+(1<<2)+(0<<1)+(1)),
    ((0<<3)+(0<<2)+(0<<1)+(1)),
    ((1<<3)+(0<<2)+(0<<1)+(0)),
    ((0<<3)+(0<<2)+(0<<1)+(0)),
    ((1<<3)+(0<<2)+(1<<1)+(0)),
    ((1<<3)+(1<<2)+(1<<1)+(0)),
    ((0<<3)+(1<<2)+(1<<1)+(1)),
    ((1<<3)+(1<<2)+(0<<1)+(1)),
    ((1<<3)+(0<<2)+(1<<1)+(1)),
    ((0<<3)+(0<<2)+(1<<1)+(1)),
    ((0<<3)+(1<<2)+(1<<1)+(0))

};



void
lin2hilbert(ulong t, ulong &x, ulong &y)

{
    ulong xv = 0, yv = 0;

    ulong c01 = (0<<2);
    for (ulong i=0; i<(32/2); ++i)
    {
        ulong abi = t >> (32 -2);
        t <<= 2;

        ulong st = htab[ (c01<<2) | abi ];
        c01 = st & 3;

        yv <<= 1;
        yv |= ((st>>2) & 1);
        xv <<= 1;
        xv |= (st>>3);
    }
# 80 "src/bits/lin2hilbert.cc"
    x = xv; y = yv;
}



static const ulong ihtab[] = {


    ((0<<3)+(0<<2)+(1<<1)+(0)),
    ((0<<3)+(1<<2)+(0<<1)+(0)),
    ((1<<3)+(1<<2)+(0<<1)+(1)),
    ((1<<3)+(0<<2)+(0<<1)+(0)),
    ((1<<3)+(0<<2)+(0<<1)+(1)),
    ((0<<3)+(1<<2)+(0<<1)+(1)),
    ((1<<3)+(1<<2)+(0<<1)+(0)),
    ((0<<3)+(0<<2)+(1<<1)+(1)),
    ((0<<3)+(0<<2)+(0<<1)+(0)),
    ((1<<3)+(1<<2)+(1<<1)+(1)),
    ((0<<3)+(1<<2)+(1<<1)+(0)),
    ((1<<3)+(0<<2)+(1<<1)+(0)),
    ((1<<3)+(0<<2)+(1<<1)+(1)),
    ((1<<3)+(1<<2)+(1<<1)+(0)),
    ((0<<3)+(1<<2)+(1<<1)+(1)),
    ((0<<3)+(0<<2)+(0<<1)+(1))

};



ulong
hilbert2lin(ulong x, ulong y)

{
    ulong t = 0;
    ulong c01 = 0;
    for (ulong i=0; i<(32/2); ++i)
    {
        t <<= 2;
        ulong xi = x >> (32/2-1);
        xi &= 1;
        ulong yi = y >> (32/2-1);
        yi &= 1;
        ulong xyi = (xi<<1) | yi;
        x <<= 1;
        y <<= 1;

        ulong st = ihtab[ (c01<<2) | xyi ];
        c01 = st & 3;

        t |= (st>>2);
    }

    return t;
}
# 243 "src/bits/lin2hilbert.cc"
ulong
hilbert_gray_code(ulong t)





{
    ulong g = 0;
    ulong c01 = 2;
    for (ulong i=0; i<(32/2); ++i)
    {
        ulong abi = t >> (32 -2);
        t <<= 2;

        ulong st = htab[ (c01<<2) | abi ];
        c01 = st & 3;

        g <<= 2;
        g |= (st>>2);
    }

    g ^= ( (g & 0x55555555UL) >> 2 );
    g ^= ( (g & 0xaaaaaaaaUL) >> 2 );




    return g;
}



ulong
inverse_hilbert_gray_code(ulong g)

{
    ulong x, y;
    bit_unzip2(g, x, y);
    x = inverse_gray_code(x);
    y = inverse_gray_code(y);
    ulong t = hilbert2lin(x, y);
    return t;
}
